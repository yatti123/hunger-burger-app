{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/Navigationitems/Navigationitem/Navigationitem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/Navigationitems/Navigationitems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/_ux/_ux.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/Navigationitems/Navigationitem/Navigationitem.js","components/Navigation/Navigationitems/Navigationitems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","store/actions/actionTypes.js","axios-orders.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/orderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","Aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","id","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","instance","axios","create","baseURL","initIngredients","dispatch","get","then","response","ingredients","data","type","actionTypes","catch","error","purchaseBurger","orderData","post","orderId","purchaseBurgerSuccess","name","console","log","purchaseBurgerFail","fetchOrders","userId","queryParams","res","fetchedOrders","key","push","orders","fetchOrdersfail","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","window","setItem","localId","err","setAuthRedirect","path","burgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","StyledDiv","styled","div","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","length","BuildControl","Label","label","Less","addIngredients","More","removeIngredients","disabled","controls","BuildControls","price","toFixed","ctrl","OrderButton","purchaseable","displayOrderSummary","modal","nextProps","nextState","modalClosed","Modal","style","transform","opacity","button","btnType","Button","OrderSummary","ingredientSummary","textTransform","total","purchaseCanceled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerBuilder","orderSummary","purchaseHandler","event","onSetAuthRedirectPath","history","purchaseCancleHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","newIngredients","sum","disabledInfo","ings","Spinner","Burger","onIngredientAdded","onIngredientRemoved","totPrice","updatePurchaseState","burgerBuilder","totalPrice","ingType","ingredientType","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","preventDefault","formData","formElementIndentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementArray","config","form","onSubmit","formElement","loading","actionCreator","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","pathname","summary","purchasedRedirect","purchased","match","component","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","Logout","onLogout","App","onTryAutoSignup","routes","getItem","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedIngredients","updatedState","updatedIng","updatedIngs","updatedSt","setIngredients","fecthIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","setAuthRedirectPath","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5693fa70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2WVx3\",\"BreadTop\":\"BurgerIngredient_BreadTop__1SLLf\",\"Seeds1\":\"BurgerIngredient_Seeds1__3SAZI\",\"Seeds2\":\"BurgerIngredient_Seeds2__1XqCf\",\"Meat\":\"BurgerIngredient_Meat__g2y_3\",\"Cheese\":\"BurgerIngredient_Cheese__9VuxC\",\"Salad\":\"BurgerIngredient_Salad__1wI6w\",\"Bacon\":\"BurgerIngredient_Bacon__3xrJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2AXUt\",\"Open\":\"SideDrawer_Open__1PsV1\",\"Close\":\"SideDrawer_Close__ph9nv\",\"Logo\":\"SideDrawer_Logo__qo6Nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1waVk\",\"Label\":\"BuildControl_Label__llnTG\",\"Less\":\"BuildControl_Less__2nkxm\",\"More\":\"BuildControl_More__3FGW5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2-zDX\",\"Label\":\"Input_Label__FDO7M\",\"InputElement\":\"Input_InputElement__2_7XG\",\"Invalid\":\"Input_Invalid__2nXLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__26v6b\",\"Logo\":\"Toolbar_Logo__UPVSN\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3iyyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"Navigationitem_NavigationItem__3FWAk\",\"active\":\"Navigationitem_active__1qmPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2WKeB\",\"OrderButton\":\"BuildControls_OrderButton__2B8ak\",\"enable\":\"BuildControls_enable__cSfcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3e7l_\",\"Success\":\"Button_Success__vsd43\",\"Danger\":\"Button_Danger__1bx3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__31Kjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2F7yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"Navigationitems_NavigationItems__8qEQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__-WnL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__NN2Xh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__xHUiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__g00np\",\"load1\":\"Spinner_load1__1IcUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3ASsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3yUPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2jorU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2H7XU\"};","const Aux = (props)=>props.children;\r\n\r\n\r\n\r\nexport default Aux","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react'\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props)=>(\r\n    <div className = {classes.Logo}>\r\n        <img src={burgerLogo} alt='MyBurger'/>\r\n    </div>\r\n);\r\n\r\n\r\nexport default logo","import React from 'react';\r\nimport classes from './Navigationitem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props)=> (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            activeClassName={classes.active} exact={props.active}>{props.children}</NavLink>        \r\n        {/* <a href={props.link} className={classes.active}>{props.children}</a> */}\r\n    </li>\r\n);\r\n\r\n\r\nexport default navigationItem","import React from 'react';\r\nimport classes from './Navigationitems.module.css';\r\nimport NavigationItem from '../Navigationitems/Navigationitem/Navigationitem';\r\n\r\nconst navigationItems = (props)=>(\r\n    <ul className = {classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/Orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated \r\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem> \r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n)\r\n\r\n\r\nexport default navigationItems","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props)=>(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../Navigationitems/Navigationitems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props)=>(\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated = {props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props)=>\r\n    (\r\n        props.show ? <div id='Backdrop' className = {classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n;\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../Navigationitems/Navigationitems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/_ux/_ux';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses.join(' ')}>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated = {props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../_ux/_ux';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer : false\r\n    }\r\n\r\n    sideDrawerClosedHandler = ()=>{\r\n        this.setState({showSideDrawer : false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = ()=>{\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer : !prevState.showSideDrawer}\r\n        })\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} isAuth = {this.props.isAuthenticated}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} isAuth = {this.props.isAuthenticated}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-my-burger-a88bf-default-rtdb.firebaseio.com/'\r\n})\r\n\r\n\r\nexport default instance;","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient = name => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientType: name\r\n    }\r\n}\r\n\r\n\r\nexport const removeIngredient = name => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientType: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = ingredients => {\r\n        return {\r\n            type: actionTypes.SET_INGREDIENTS,\r\n            ingredients: ingredients\r\n        }\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch( error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        })\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth='+token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                console.log('purchaseBurgerFail ',error);\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nconst fetchOrdersSuccess = orders => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrdersfail = error => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId+'\"';\r\n        axios.get('/orders.json'+ queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for(let key in res.data){\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch( error => {\r\n                dispatch(fetchOrdersfail(error));\r\n            })\r\n    }\r\n}","// import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = ()=>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        },expirationTime) \r\n    };\r\n};\r\n\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC97oM47oAWOrEdBDXnwpeHNtTP86bOaUQ';\r\n\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC97oM47oAWOrEdBDXnwpeHNtTP86bOaUQ';\r\n        }\r\n        axios.post(url,authData)\r\n        .then(response => {\r\n            // console.log(response);\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn *1000);\r\n            window.localStorage.setItem('token', response.data.idToken);\r\n            window.localStorage.setItem('expirationDate', expirationDate);\r\n            window.localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn * 1000)); // convert into milliseconds\r\n        })\r\n        .catch(err => {\r\n            // console.log(err.response);\r\n            dispatch(authFail(err.response.data.error));\r\n        })\r\n    };\r\n};\r\n\r\n\r\nexport const setAuthRedirect = (path)=>{\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token'); \r\n        if(!token){\r\n            return dispatch(logout()); // not require as such\r\n        } else {\r\n            console.log('token still present...');\r\n            // Convert date string returned from local storage into date\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate')); \r\n\r\n            \r\n            if(expirationDate <= new Date()){\r\n                console.log('logging out');\r\n                dispatch(logout());\r\n            } else {\r\n                console.log('signing in');\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()));\r\n                //The getTime() method returns the number of milliseconds between midnight of January 1, 1970 and the specified date.\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n};","import React from 'react'\r\nimport classes from './BurgerIngredient.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst burgerIngredient = (props)=>{\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        case('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n};\r\n\r\nburgerIngredient.propTypes ={\r\n    type:PropTypes.string.isRequired\r\n}\r\n\r\nexport default burgerIngredient","import React from 'react'\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 100%;\r\n    margin: auto;\r\n    height: 250px;\r\n    overflow: auto;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 1.2rem;\r\n\r\n    @media (min-width: 500px) and (max-height: 400px)  {\r\n        width: 350px;\r\n        height: 300px;\r\n    }\r\n\r\n    @media (min-width: 500px) and (min-height: 401px)  {\r\n        width: 450px;\r\n        height: 400px;\r\n    }\r\n\r\n    @media (min-width: 1000px) and (min-height: 700px)  {\r\n        width: 700px;\r\n        height: 600px;\r\n        background-color : #dfdfdf;\r\n    }\r\n`;\r\n\r\nconst burger = (props)=>{\r\n    // Convert Ingredients object into Ingredient array\r\n    // Outer map will return an array of Arrays. Inner Arrays items are \r\n    //ingredients repeating with their exact counts\r\n\r\n    // Simple solution is in Order.js file\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => [...Array(props.ingredients[igKey])].map((_,i) => {\r\n        return <BurgerIngredient key = {igKey+i} type={igKey} />\r\n    })).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    \r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n    return (\r\n            <StyledDiv>\r\n                <BurgerIngredient type='bread-top' />\r\n                {transformedIngredients}\r\n                <BurgerIngredient type='bread-bottom' />\r\n            </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less}\r\n            onClick={()=>{props.addIngredients(props.type)}}\r\n        >More</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={()=>{props.removeIngredients(props.type)}}\r\n            disabled={props.disabled}\r\n        >Less</button>\r\n    </div>\r\n)\r\n\r\n\r\nexport default BuildControl","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst BuildControls = (props) => (\r\n    <div className = {classes.BuildControls}>\r\n    <p>Current Price : <strong>{props.price.toFixed(2)}$</strong></p>\r\n        {controls.map(ctrl=> (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                type={ctrl.type} \r\n                addIngredients={props.addIngredients}\r\n                removeIngredients={props.removeIngredients}\r\n                disabled = {props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button\r\n            id='Order'\r\n            className = {classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.displayOrderSummary}>\r\n            {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n        </button>\r\n    </div>\r\n)\r\n\r\n\r\nexport default BuildControls","import React, { Component } from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/_ux/_ux'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    componentWillUpdate() {\r\n        // console.log('[Modal] will update');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div className={classes.Modal}\r\n                 style = {{\r\n                    transform : this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity : this.props.show ? '0.8': '0',\r\n                    }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default modal","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n<button \r\n    disabled={props.disabled}\r\n    id={props.btnType}\r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}>{props.children}</button>\r\n)\r\n\r\n\r\nexport default button","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/_ux/_ux';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class\r\n    componentWillUpdate() {\r\n        console.log('[OrderSummary] will update');\r\n    }\r\n\r\n    render(){\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map((igKey, i)=>{\r\n        return (\r\n                    <li key={igKey+i}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>:{this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                \r\n                <p><strong>Total Price : {this.props.total.toFixed(2)} $</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button clicked={this.props.purchaseCanceled} btnType='Danger'>CANCEL</Button>\r\n                <Button clicked={this.props.purchaseContinued} btnType='Success'>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = ()=>(\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../_ux/_ux';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error : null\r\n        }\r\n        componentWillMount(){\r\n            // We are not causing side effect here , just setting up interceptors\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error : null});\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, err => {\r\n                this.setState({error : err});\r\n            })\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmHandler = ()=>{\r\n            this.setState({error: null});\r\n        }\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Aux from '../../hoc/_ux/_ux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/orderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nexport class BurgerBuilder extends Component  {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n        orderSummary : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        // axios.get('https://react-my-burger-a88bf-default-rtdb.firebaseio.com/ingredients.json')\r\n        //     .then(response=>{\r\n        //         this.setState({ingredients : response.data})                \r\n        //     })\r\n        //     .catch(error=>{\r\n        //         this.setState({ error : true });\r\n        //     })\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState (newIngredients) {\r\n        const ingredients = {\r\n            ...newIngredients\r\n        };\r\n        const sum = Object.keys(ingredients).map(igKey => ingredients[igKey])\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    \r\n    purchaseHandler = (event)=>{\r\n        if(this.props.isAuthenticated){\r\n            this.setState ({\r\n                orderSummary : true\r\n            })\r\n        }\r\n        else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancleHandler = ()=>{\r\n        this.setState ({\r\n            orderSummary : false\r\n        })\r\n    }\r\n\r\n    //If we don't use redux\r\n    // purchaseContinueHandler = ()=>{\r\n    //     // alert('You Continue!');\r\n    //        //These query params will be recieved in the component which is being called by this route\r\n    //        // Here we are passing props to the siblings(checkout).\r\n    //         //Parent of BurgeBuilder and Checkout is App.js\r\n\r\n    //        const queryParams = [];\r\n\r\n    //        for(let i in this.props.ings) {\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\r\n    //        }\r\n\r\n    //        queryParams.push('price=' + this.props.totPrice);\r\n\r\n    //        const queryString = queryParams.join('&');\r\n    //         this.props.history.push({\r\n    //             pathname : '/checkout',\r\n    //             // ingredients : {...this.state.ingredients}\r\n    //             search : '?' + queryString\r\n    //         });\r\n    // }\r\n\r\n    purchaseContinueHandler = ()=>{\r\n            this.props.onInitPurchase();\r\n            this.props.history.push('/checkout');\r\n    }\r\n    \r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        // disabledInfo = {salad: true, meat: false, ...}\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        addIngredients={this.props.onIngredientAdded}\r\n                        removeIngredients={this.props.onIngredientRemoved}\r\n                        disabled = {disabledInfo}\r\n                        price = {this.props.totPrice}\r\n                        purchaseable = {this.updatePurchaseState(this.props.ings)}\r\n                        displayOrderSummary = {this.purchaseHandler}\r\n                        isAuth = {this.props.isAuthenticated}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                                purchaseCanceled={this.purchaseCancleHandler}\r\n                                purchaseContinued={this.purchaseContinueHandler}\r\n                                ingredients={this.props.ings}\r\n                                total = {this.props.totPrice}\r\n                            />;\r\n        }\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.orderSummary} modalClosed={this.purchaseCancleHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingType) => dispatch(actions.addIngredient(ingType)),\r\n        onIngredientRemoved: (ingType) => dispatch(actions.removeIngredient(ingType)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props)=>{\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType='Danger'\r\n                clicked={props.checkoutCancelled}\r\n                >CANCEL</Button>\r\n            <Button \r\n                btnType='Success'\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch(props.elementType){\r\n        case('input') : \r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n        break;\r\n        case('textarea') : \r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n        break;\r\n        case('select') : \r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value}\r\n                            value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n        break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionCreator from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            },\r\n            street : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            },\r\n            zipcode : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zipcode'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true,\r\n                    minLength : 5,\r\n                    maxLength : 5\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            },\r\n            country : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            },\r\n            email : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your e-mail'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            },\r\n            deliveryMethod : {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation : {},\r\n                //to make sure deliveryMethod is always valid, or we can say no need to check deliveryMethod validity\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n\r\n        for(let formElementIndentifier in this.state.orderForm){\r\n            formData[formElementIndentifier] = this.state.orderForm[formElementIndentifier].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients : this.props.ings,\r\n            price : this.props.totPrice,\r\n            orderData : formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);            \r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm) {\r\n                formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n\r\n    }\r\n\r\n    render () {\r\n        let formElementArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}> \r\n                {formElementArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value} \r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => {this.inputChangedHandler(event,formElement.id)}} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner/>;\r\n            }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter Your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totPrice: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actionCreator.purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = ()=>{\r\n        this.props.history.goBack('/');\r\n    }\r\n\r\n    checkoutContinuedHandler = ()=>{\r\n        this.props.history.replace({\r\n            pathname: '/checkout/contact-data'\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to='/' />\r\n\r\n        if(this.props.ings){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData}/>\r\n                </div>\r\n            )\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    // Convert Ingredients object into Ingredient array\r\n    //Another way in Burger.js file\r\n    for ( let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name : ingredientName,\r\n            amount : props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform : 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>);\r\n\r\n}\r\n//Number.parseFloat to convert string into number\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let Orders = <Spinner />;\r\n\r\n    if (!this.props.loading) {\r\n      Orders = this.props.orders.map((order) => (\r\n        <Order\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n          key={order.id}\r\n        />\r\n      ));\r\n    }\r\n    return <div>{Orders}</div>;\r\n  }\r\n}\r\n\r\n//Using Destructring\r\nconst mapStatetoProps = ({ order, auth }) => {\r\n  return {\r\n    orders: order.orders,\r\n    loading: order.loading,\r\n    token: auth.token,\r\n    userId: auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  mapDispatchtoProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            },\r\n            password : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'Password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation : {\r\n                    required : true,\r\n                    minLength: 6,\r\n                    maxLength: 6\r\n                },\r\n                valid : false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n\r\n        this.setState({controls: updatedControls})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};\r\n        })\r\n    }\r\n\r\n    render () {\r\n        let formElementArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value} \r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => {this.inputChangedHandler(event,formElement.id)}}\r\n            />\r\n        ))\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if(this.props.error){\r\n            errorMessage = (<p>{this.props.error.message}</p>);\r\n        }\r\n        \r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n    \r\n        return ( \r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n                <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGIN' : 'SIGNUP'}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirect('/'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n    render (){\r\n        return (\r\n            <Redirect to='/'/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: ()=> dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React,{ Component } from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './store/actions/index';\r\n\r\nclass App extends Component {\r\n    componentDidMount(){\r\n        this.props.onTryAutoSignup();\r\n    }\r\n    render() {\r\n        let routes = (\r\n            <Switch>\r\n                <Route path=\"/auth\" component={Auth} />\r\n                <Route path=\"/\" exact component={BurgerBuilder} />\r\n                <Redirect to = \"/\" />\r\n            </Switch>\r\n        )\r\n\r\n        if (this.props.isAuthenticated){\r\n            routes = (\r\n                <Switch>\r\n                    <Route path=\"/checkout\" component={Checkout} />\r\n                    <Route path=\"/Orders\" component={Orders} />\r\n                    <Route path=\"/logout\" component={Logout} />\r\n                    <Route path=\"/\" exact component={BurgerBuilder} />\r\n                    <Redirect to = \"/\" />\r\n            </Switch>\r\n            );\r\n        }\r\n        return (\r\n                <div>\r\n                    <BrowserRouter>\r\n                        <Layout>\r\n                            {routes}\r\n                        </Layout>\r\n                    </BrowserRouter>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","export const updateObject = ( oldObject, updatedProperties ) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients : null,\r\n    totalPrice : 4,\r\n    error : false,\r\n    building: false\r\n}\r\n\r\n//Global variables should be in upper case\r\nconst INGREDIENT_PRICES = {\r\n    salad : 0.5,\r\n    cheese : 2,\r\n    meat : 2,\r\n    bacon : 1\r\n}\r\n\r\nconst addIngredients = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientType]: state.ingredients[action.ingredientType] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: {...updatedIngredients},\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientType],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIng = {[action.ingredientType]: state.ingredients[action.ingredientType] - 1};\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: {...updatedIngs},\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientType],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\n// setIngredients - just loaded the page and set the state from initial values from server\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        error: false,\r\n        totalPrice: 4,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fecthIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.ADD_INGREDIENT: return addIngredients(state, action);\r\n\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredients(state, action);\r\n\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);         \r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fecthIngredientsFailed(state, action);\r\n        \r\n        default: return state\r\n        }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n};\r\n\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\r\n    return updateObject(state, {\r\n        orders: state.orders.concat(newOrder),\r\n        loading: false,\r\n        purchased: true\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n            \r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n            \r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n            \r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n            \r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n            \r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState ={\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    })\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\n//For Burger Builder Project\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\n//For Burger Builder Project\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\n// Setup Redux Dev Tool, if we are having middle ware\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}><App/></Provider>,document.getElementById('root'));"],"sourceRoot":""}